{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///./datasource.ts","webpack:///./module.ts","webpack:///./response_parser.ts","webpack:///./query_builder.ts","webpack:///./cache.ts","webpack:///./request_aggregator.ts","webpack:///./query_ctrl.ts","webpack:///external \"app/plugins/sdk\"","webpack:///./monaco/kusto_monaco_editor.ts","webpack:///external \"angular\"","webpack:///./monaco/kusto_code_editor.ts","webpack:///./annotations_query_ctrl.ts","webpack:///./config_ctrl.ts","webpack:///./version.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","_response_parser","a","u","e","KustoDBDatasource","instanceSettings","backendSrv","$q","templateSrv","this","id","baseUrl","url","defaultOrFirstDatabase","jsonData","defaultDatabase","cache","_cache2","ttl","getCacheTtl","requestAggregatorSrv","_request_aggregator2","$inject","query","options","_this","queries","_lodash2","filter","targets","item","hide","indexOf","map","target","interpolatedQuery","_query_builder2","replace","scopedVars","interpolateVariable","interpolate","intervalMs","maxDataPoints","format","resultFormat","refId","datasourceId","data","csl","db","database","length","promises","doQueries","all","then","results","ResponseParser","parseQueryResult","annotationQuery","annotation","rawQuery","reject","message","buildQuery","transformToAnnotations","metricFindQuery","getDefaultOrFirstDatabase","parseToVariables","catch","err","error","testDatasource","doRequest","response","status","title","statusText","Message","getDatabases","parseDatabases","Promise","resolve","databases","getSchema","req","parseSchemaResult","dsPost","result","res","put","queryBuilder","push","maxRetries","datasourceRequest","method","variable","multi","includeAll","val","join","minimalCache","Error","AnnotationsQueryCtrl","ConfigCtrl","QueryCtrl","Datasource","_datasource","KustoDBQueryCtrl","_config_ctrl","KustoDBConfigCtrl","Tables","_i","_a","_b","_c","Rows","row","text","schemaJson","JSON","parse","columns","Columns","rows","concat","parseTimeSeriesResult","parseTableResult","timeIndex","metricIndex","valueIndex","ColumnType","includes","rows_1","epoch","dateTimeToEpoch","metricName","bucket","findOrCreateBucket","datapoints","type","col","ColumnName","variables","flattenDeep","list","result_1","textIndex","tagsIndex","toLowerCase","time","Math","floor","toString","tags","trim","split","dataTarget","find","dateTime","_moment2","valueOf","QueryBuilder","macroRegexp","match","p1","p2","getMultiContains","escape","timeField_1","getTimeFilter","interval","getFrom","getUntil","test","exec","from","range","startOf","toISOString","rangeRaw","to","until","timeField","inputs","firstCommaIndex","field","substring","templateVar","v","Cache","opts","store","del","expire","Date","now","timeout","setTimeout","clearTimeout","next","throw","done","apply","label","sent","trys","ops","return","iterator","TypeError","pop","RequestAggregator","ongoingRequests","__generator","error_1","setPrototypeOf","__proto__","Array","constructor","_super","$scope","$injector","defaults","defaultsDeep","panelCtrl","events","on","onDataReceived","onDataError","__extends","dataList","lastQueryError","lastQuery","anySeriesFromQuery","handleQueryCtrlError","innererror","datasource","dbs","templateUrl","kustoMonacoEditorDirective","_angular2","_interopRequireDefault","_kusto_code_editor2","obj","editorTemplate","link","scope","elem","attrs","containerDiv","initMonaco","kustoCodeEditor","defaultTimeField","_config2","addCommand","monaco","KeyMod","Shift","KeyCode","Enter","newValue","getValue","content","onChange","$watch","oldValue","editorValue","$$postDigest","setEditorContent","setOnDidChangeModelContent","$apply","$on","disposeMonaco","window","System","import","pluginBaseUrl","onblur","onkeydown","evt","stopPropagation","restrict","template","KustoCodeEditor","config","splitWithNewLineRegex","newLineRegex","startsWithKustoPipeRegex","kustoPipeRegexStrict","themeName","bootData","user","lightTheme","editor","defineTheme","base","inherit","rules","token","foreground","background","colors","textCodeBlock.background","languages","kusto","kustoDefaults","setLanguageSettings","includeControlCommands","newlineAfterPipe","useIntellisenseV2","codeEditor","language","selectionHighlight","theme","folding","lineNumbers","lineHeight","suggestFontSize","dragAndDrop","occurrencesHighlight","minimap","enabled","renderIndentGuides","wordWrap","layout","getModels","completionItemProvider","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","getCompletionItems","signatureHelpProvider","registerSignatureHelpProvider","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelp","createContextKey","onDidChangeCursorSelection","event","schema","getKustoWorker","workerAccessor","getModel","uri","worker","dbName","keys","Databases","setSchemaFromShowSchema","listener","onDidChangeModelContent","dispose","console","keybinding","commandFunc","toSuggestionController","srv","setValue","model","position","timeFilterDocs","textUntilPosition","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","column","getLineContent","kind","CompletionItemKind","Keyword","insertText","documentation","activeParameter","activeSignature","signatures","parameters","source","reason","CursorChangeReason","RecoverFromMarkers","getCharAt","selection","positionLineNumber","positionColumn","triggerSuggestions","suggestController","getContribution","convertedController","_model","cancel","trigger","getLineCount","line","KustoDBAnnotationsQueryCtrl","showHelp","defaultQuery","hasRequiredGrafanaVersion","hasMinVersion","suggestUrl","getSuggestUrls","current","kustoDbDatasource","_version","isVersionGtOrEq","buildInfo","latestVersion","version","showMinVersionWarning","SemVersion","isGtOrEq","versionPattern","major","Number","minor","patch","meta","compared","isValid","isNumber"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import _ from 'lodash';\nimport { ResponseParser, DatabaseItem } from './response_parser';\nimport QueryBuilder from './query_builder';\nimport Cache from './cache';\nimport RequestAggregator from './request_aggregator';\n\nexport class KustoDBDatasource {\n  id: number;\n  name: string;\n  baseUrl: string;\n  url: string;\n  defaultOrFirstDatabase: string;\n  cache: Cache;\n  requestAggregatorSrv: RequestAggregator;\n\n  /** @ngInject */\n  constructor(instanceSettings, private backendSrv, private $q, private templateSrv) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.baseUrl = `/azuredataexplorer`;\n    this.url = instanceSettings.url;\n    this.defaultOrFirstDatabase = instanceSettings.jsonData.defaultDatabase;\n    this.cache = new Cache({ ttl: this.getCacheTtl(instanceSettings) });\n    this.requestAggregatorSrv = new RequestAggregator(backendSrv);\n  }\n\n  query(options) {\n    const queries = _.filter(options.targets, item => {\n      return item.hide !== true && item.query && item.query.indexOf('<table name>') === -1;\n    }).map(target => {\n      const url = `${this.baseUrl}/v1/rest/query`;\n      const interpolatedQuery = new QueryBuilder(\n        this.templateSrv.replace(target.query, options.scopedVars, this.interpolateVariable),\n        options\n      ).interpolate().query;\n\n      return {\n        key: `${url}-${options.intervalMs}-${options.maxDataPoints}-${options.format}-${\n          target.resultFormat\n        }-${interpolatedQuery}`,\n        refId: target.refId,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        datasourceId: this.id,\n        url: url,\n        query: interpolatedQuery,\n        format: options.format,\n        resultFormat: target.resultFormat,\n        data: {\n          csl: interpolatedQuery,\n          db: target.database,\n        },\n      };\n    });\n\n    if (!queries || queries.length === 0) {\n      return { data: [] };\n    }\n\n    const promises = this.doQueries(queries);\n\n    return this.$q.all(promises).then(results => {\n      return new ResponseParser().parseQueryResult(results);\n    });\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation.rawQuery) {\n      return this.$q.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n\n    const queries: any[] = this.buildQuery(options.annotation.rawQuery, options, options.annotation.database);\n\n    const promises = this.doQueries(queries);\n\n    return this.$q.all(promises).then(results => {\n      const annotations = new ResponseParser().transformToAnnotations(options, results);\n      return annotations;\n    });\n  }\n\n  metricFindQuery(query: string) {\n    return this.getDefaultOrFirstDatabase().then(database => {\n      const queries: any[] = this.buildQuery(query, null, database);\n\n      const promises = this.doQueries(queries);\n\n      return this.$q\n        .all(promises)\n        .then(results => {\n          return new ResponseParser().parseToVariables(results);\n        })\n        .catch(err => {\n          if (err.error && err.error.data && err.error.data.error) {\n            throw { message: err.error.data.error['@message'] };\n          }\n        });\n    });\n  }\n\n  testDatasource() {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: '.show databases',\n    };\n    return this.doRequest(url, req)\n      .then(response => {\n        if (response.status === 200) {\n          return {\n            status: 'success',\n            message: 'Successfully queried the Azure Data Explorer database.',\n            title: 'Success',\n          };\n        }\n\n        return {\n          status: 'error',\n          message: 'Returned http status code ' + response.status,\n        };\n      })\n      .catch(error => {\n        let message = 'Azure Data Explorer: ';\n        message += error.statusText ? error.statusText + ': ' : '';\n\n        if (error.data && error.data.Message) {\n          message += error.data.Message;\n        } else if (error.data) {\n          message += error.data;\n        } else {\n          message += 'Cannot connect to the Azure Data Explorer REST API.';\n        }\n        return {\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  getDatabases(): Promise<DatabaseItem[]> {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: '.show databases',\n    };\n\n    return this.doRequest(url, req).then(response => {\n      return new ResponseParser().parseDatabases(response);\n    });\n  }\n\n  getDefaultOrFirstDatabase() {\n    if (this.defaultOrFirstDatabase) {\n      return Promise.resolve(this.defaultOrFirstDatabase);\n    }\n\n    return this.getDatabases().then(databases => {\n      this.defaultOrFirstDatabase = databases[0].value;\n      return this.defaultOrFirstDatabase;\n    });\n  }\n\n  getSchema(database) {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: `.show database [${database}] schema as json`,\n    };\n\n    return this.doRequest(url, req).then(response => {\n      return new ResponseParser().parseSchemaResult(response.data);\n    });\n  }\n\n  doQueries(queries) {\n    return queries.map(query => {\n      const cacheResponse = this.cache.get(query.key);\n      if (cacheResponse) {\n        return cacheResponse;\n      } else {\n        return this.requestAggregatorSrv\n          .dsPost(query.key, this.url + query.url, query.data)\n          .then(result => {\n            const res = {\n              result: result,\n              query: query,\n            };\n            if (query.key) {\n              this.cache.put(query.key, res);\n            }\n            return res;\n          })\n          .catch(err => {\n            throw {\n              error: err,\n              query: query,\n            };\n          });\n      }\n    });\n  }\n\n  private buildQuery(query: string, options: any, database: string) {\n    const queryBuilder = new QueryBuilder(this.templateSrv.replace(query, {}, this.interpolateVariable), options);\n    const url = `${this.baseUrl}/v1/rest/query`;\n    const csl = queryBuilder.interpolate().query;\n    const queries: any[] = [];\n    queries.push({\n      key: `${url}-table-${database}-${csl}`,\n      datasourceId: this.id,\n      url: url,\n      resultFormat: 'table',\n      data: {\n        csl,\n        db: database,\n      },\n    });\n    return queries;\n  }\n\n  doRequest(url, data, maxRetries = 1) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + url,\n        method: 'POST',\n        data: data,\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doRequest(url, data, maxRetries - 1);\n        }\n\n        throw error;\n      });\n  }\n\n  interpolateVariable(value, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    var quotedValues = _.map(value, function(val) {\n      if (typeof value === 'number') {\n        return value;\n      }\n\n      return \"'\" + val + \"'\";\n    });\n    return quotedValues.join(',');\n  }\n\n  getCacheTtl(instanceSettings) {\n    if (instanceSettings.jsonData.minimalCache === undefined) {\n      // default ttl is 30 sec\n      return 30000;\n    }\n\n    if (instanceSettings.jsonData.minimalCache < 1) {\n      throw new Error('Minimal cache must be greater than or equal to 1.');\n    }\n\n    return instanceSettings.jsonData.minimalCache * 1000;\n  }\n}\n","import { KustoDBDatasource } from './datasource';\nimport { KustoDBQueryCtrl } from './query_ctrl';\nimport { KustoDBAnnotationsQueryCtrl } from './annotations_query_ctrl';\nimport { KustoDBConfigCtrl } from './config_ctrl';\n\n\nexport {\n  KustoDBDatasource as Datasource,\n  KustoDBQueryCtrl as QueryCtrl,\n  KustoDBConfigCtrl as ConfigCtrl,\n  KustoDBAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\nimport moment from 'moment';\n\nexport interface DataTarget {\n  target: string;\n  datapoints: any[];\n  refId: string;\n  query: any;\n}\n\nexport interface TableResult {\n  columns: TableColumn[];\n  rows: any[];\n  type: string;\n  refId: string;\n  query: string;\n}\n\nexport interface TableColumn {\n  text: string;\n  type: string;\n}\n\nexport interface Variable {\n  text: string;\n  value: string;\n}\n\nexport interface AnnotationItem {\n  annotation: any;\n  time: number;\n  text: string;\n  tags: string[];\n}\n\n// API interfaces\nexport interface KustoDatabaseList {\n  data: {\n    Tables: KustoDatabaseItem[];\n  };\n}\n\nexport interface KustoDatabaseItem {\n  TableName: string;\n  Columns: any[];\n  Rows: any[];\n}\n\nexport interface KustoSchema {\n  Databases: { [key: string]: KustoDatabase };\n  Plugins: any[];\n}\nexport interface KustoDatabase {\n  Name: string;\n  Tables: { [key: string]: KustoTable };\n  Functions: { [key: string]: KustoFunction };\n}\n\nexport interface KustoTable {\n  Name: string;\n  OrderedColumns: KustoColumn[];\n}\n\nexport interface KustoColumn {\n  Name: string;\n  Type: string;\n}\n\nexport interface KustoFunction {\n  Name: string;\n  DocString: string;\n  Body: string;\n  Folder: string;\n  FunctionKind: string;\n  InputParameters: any[];\n  OutputColumns: any[];\n}\n\n// Internal interfaces\nexport interface DatabaseItem {\n  text: string;\n  value: string;\n}\n\nexport class ResponseParser {\n  parseDatabases(results: KustoDatabaseList): DatabaseItem[] {\n    const databases: DatabaseItem[] = [];\n    if (!results || !results.data || !results.data.Tables || results.data.Tables.length === 0) {\n      return databases;\n    }\n\n    for (let table of results.data.Tables) {\n      for (let row of table.Rows) {\n        databases.push({ text: row[5] || row[0], value: row[0] });\n      }\n    }\n\n    return databases;\n  }\n\n  parseSchemaResult(results: any): KustoSchema {\n    const schemaJson = results.Tables[0].Rows[0][0];\n    return JSON.parse(schemaJson);\n  }\n\n  parseQueryResult(results: any) {\n    let data: any[] = [];\n    let columns: any[] = [];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i].result.data.Tables.length === 0) {\n        continue;\n      }\n      columns = results[i].result.data.Tables[0].Columns;\n      const rows = results[i].result.data.Tables[0].Rows;\n\n      if (results[i].query.resultFormat === 'time_series') {\n        data = _.concat(data, this.parseTimeSeriesResult(results[i].query, columns, rows));\n      } else {\n        data = _.concat(data, this.parseTableResult(results[i].query, columns, rows));\n      }\n    }\n    return { data: data };\n  }\n\n  parseTimeSeriesResult(query, columns, rows): DataTarget[] {\n    const data: DataTarget[] = [];\n    let timeIndex = -1;\n    let metricIndex = -1;\n    let valueIndex = -1;\n\n    for (let i = 0; i < columns.length; i++) {\n      if (timeIndex === -1 && columns[i].ColumnType === 'datetime') {\n        timeIndex = i;\n      }\n\n      if (metricIndex === -1 && columns[i].ColumnType === 'string') {\n        metricIndex = i;\n      }\n\n      if (valueIndex === -1 && ['int', 'long', 'real', 'double'].includes(columns[i].ColumnType)) {\n        valueIndex = i;\n      }\n    }\n\n    if (timeIndex === -1) {\n      throw new Error('No datetime column found in the result. The Time Series format requires a time column.');\n    }\n    for (let row of rows) {\n      const epoch = ResponseParser.dateTimeToEpoch(row[timeIndex]);\n      const metricName = metricIndex > -1 ? row[metricIndex] : columns[valueIndex].name;\n      const bucket = ResponseParser.findOrCreateBucket(data, metricName);\n      bucket.datapoints.push([row[valueIndex], epoch]);\n      bucket.refId = query.refId;\n      bucket.query = query.query;\n    }\n    return data;\n  }\n\n  parseTableResult(query, columns, rows): TableResult {\n    const tableResult: TableResult = {\n      type: 'table',\n      columns: _.map(columns, col => {\n        return { text: col.ColumnName, type: col.ColumnType };\n      }),\n      rows: rows,\n      refId: query.refId,\n      query: query.query,\n    };\n\n    return tableResult;\n  }\n\n  parseToVariables(results): Variable[] {\n    const variables: Variable[] = [];\n\n    const queryResult = this.parseQueryResult(results);\n\n    for (let result of queryResult.data) {\n      for (let row of _.flattenDeep(result.rows)) {\n        variables.push(<Variable>{\n          text: row,\n          value: row,\n        });\n      }\n    }\n\n    return variables;\n  }\n\n  transformToAnnotations(options: any, result: any) {\n    const queryResult = this.parseQueryResult(result);\n\n    const list: AnnotationItem[] = [];\n\n    for (let result of queryResult.data) {\n      let timeIndex = -1;\n      let textIndex = -1;\n      let tagsIndex = -1;\n\n      for (let i = 0; i < result.columns.length; i++) {\n        if (timeIndex === -1 && result.columns[i].type === 'datetime') {\n          timeIndex = i;\n        }\n\n        if (textIndex === -1 && result.columns[i].text.toLowerCase() === 'text') {\n          textIndex = i;\n        }\n\n        if (tagsIndex === -1 && result.columns[i].text.toLowerCase() === 'tags') {\n          tagsIndex = i;\n        }\n      }\n\n      for (let row of result.rows) {\n        list.push({\n          annotation: options.annotation,\n          time: Math.floor(ResponseParser.dateTimeToEpoch(row[timeIndex])),\n          text: row[textIndex] ? row[textIndex].toString() : '',\n          tags: row[tagsIndex] ? row[tagsIndex].trim().split(/\\s*,\\s*/) : [],\n        });\n      }\n    }\n\n    return list;\n  }\n\n  static findOrCreateBucket(data, target): DataTarget {\n    let dataTarget = _.find(data, ['target', target]);\n    if (!dataTarget) {\n      dataTarget = { target: target, datapoints: [], refId: '', query: '' };\n      data.push(dataTarget);\n    }\n\n    return dataTarget;\n  }\n\n  static dateTimeToEpoch(dateTime) {\n    return moment(dateTime).valueOf();\n  }\n}\n","import moment from 'moment';\n\nexport default class QueryBuilder {\n  constructor(public rawQuery, public options) {}\n\n  interpolate() {\n    if (!this.rawQuery) {\n      return { query: '' };\n    }\n    let query = this.rawQuery;\n    const macroRegexp = /\\$__([_a-zA-Z0-9]+)\\(([^\\)]*)\\)/gi;\n    query = query.replace(macroRegexp, (match, p1, p2) => {\n      if (p1 === 'contains') {\n        return this.getMultiContains(p2);\n      }\n\n      return match;\n    });\n\n    query = query.replace(/\\$__escapeMulti\\(('[^]*')\\)/gi, (match, p1) => this.escape(p1));\n\n    // if query or annotation query\n    if (this.options) {\n      let timeField = '';\n      query = query.replace(macroRegexp, (match, p1, p2) => {\n        if (p1 === 'timeFilter') {\n          timeField = p2.trim();\n          return this.getTimeFilter(p2, this.options);\n        }\n\n        return match;\n      });\n      query = query.replace(/\\$__interval/gi, this.options.interval);\n      query = query.replace(/\\$__from/gi, this.getFrom(this.options));\n      query = query.replace(/\\$__to/gi, this.getUntil(this.options));\n\n      const orderByRegexp = /order\\s+by/gi;\n      if (!orderByRegexp.test(query)) {\n        if (!timeField) {\n          const binRegex = /bin\\(([_a-zA-Z0-9]+),/;\n          const match = binRegex.exec(query);\n          timeField = match? match[1]: '';\n        }\n\n        if (timeField) {\n          query += `\\n| order by ${timeField} asc`;\n        }\n      }\n    }\n\n    return { query };\n  }\n\n  getFrom(options) {\n    var from = options.range.from;\n    return `datetime(${moment(from)\n      .startOf('minute')\n      .toISOString()})`;\n  }\n\n  getUntil(options) {\n    if (options.rangeRaw.to === 'now') {\n      return 'now()';\n    } else {\n      var until = options.range.to;\n      return `datetime(${moment(until)\n        .startOf('minute')\n        .toISOString()})`;\n    }\n  }\n\n  getTimeFilter(timeField, options) {\n    if (options.rangeRaw.to === 'now') {\n      return `${timeField} >= ${this.getFrom(options)}`;\n    } else {\n      return `${timeField}  >= ${this.getFrom(options)} and ${timeField} <= ${this.getUntil(options)}`;\n    }\n  }\n\n  getMultiContains(inputs: string) {\n    const firstCommaIndex = inputs.indexOf(',');\n    const field = inputs.substring(0, firstCommaIndex);\n    const templateVar = inputs.substring(inputs.indexOf(',') + 1);\n\n    if (templateVar && templateVar.toLowerCase().trim() === 'all') {\n      return '1 == 1';\n    }\n\n    return `${field.trim()} in (${templateVar.trim()})`;\n  }\n\n  escape(inputs: string) {\n    return inputs\n      .substring(1, inputs.length - 1)\n      .split(`','`)\n      .map(v => `@'${v}'`)\n      .join(', ');\n  }\n}\n","interface CacheOptions {\n  ttl: number;\n}\n\nexport default class Cache {\n  store: any;\n  constructor(private opts: CacheOptions = { ttl: 10000 }) {\n    this.store = {};\n  }\n\n  put(key, value, ttl = this.opts.ttl): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expire: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key): any {\n    var item = this.store[key];\n    if (item && item.expire && item.expire <= Date.now()) {\n      this.del(key);\n      item = undefined;\n    }\n\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","export default class RequestAggregator {\n  ongoingRequests: any;\n  constructor(private backendSrv) {\n    this.ongoingRequests = {};\n  }\n\n  async doRequest(url, data, maxRetries = 1): Promise<any> {\n    return this.backendSrv\n      .datasourceRequest({\n        url,\n        method: 'POST',\n        data,\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doRequest(url, data, maxRetries - 1);\n        }\n\n        throw error;\n      });\n  }\n\n  async dsPost(key, url, payload): Promise<any> {\n    if (this.ongoingRequests.hasOwnProperty(key)) {\n      return this.ongoingRequests[key];\n    } else {\n      this.ongoingRequests[key] = new Promise(async (resolve, reject) => {\n        try {\n          const response = await this.doRequest(url, payload);\n          resolve(response);\n        } catch (error) {\n          reject(error);\n        } finally {\n          delete this.ongoingRequests[key];\n        }\n      });\n      return this.ongoingRequests[key];\n    }\n  }\n}\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\nimport './monaco/kusto_monaco_editor';\nimport { DatabaseItem } from './response_parser';\n\nexport interface ResultFormat {\n  text: string;\n  value: string;\n}\n\nexport class KustoDBQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  defaults = {\n    query: [\n      '//change this to create your own time series query',\n      '',\n      '<table name>',\n      '| where $__timeFilter(Timestamp)',\n      '// | summarize count() by <group by column>, bin(Timestamp, $__interval)',\n      '// | order by Timestamp asc',\n    ].join('\\n'),\n    resultFormat: 'time_series',\n    database: '',\n  };\n\n  resultFormats: ResultFormat[];\n  showHelp: boolean;\n  showLastQuery: boolean;\n  lastQuery: string;\n  lastQueryError?: string;\n  databases: DatabaseItem[];\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    _.defaultsDeep(this.target, this.defaults);\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n    this.resultFormats = [{ text: 'Time series', value: 'time_series' }, { text: 'Table', value: 'table' }];\n    this.getDatabases();\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = undefined;\n    this.lastQuery = '';\n\n    let anySeriesFromQuery: any = _.find(dataList, { refId: this.target.refId });\n    if (anySeriesFromQuery) {\n      this.lastQuery = anySeriesFromQuery.query;\n    }\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.query && err.query.refId && err.query.refId !== this.target.refId) {\n      return;\n    }\n\n    if (err.error && err.error.data && err.error.data.error && err.error.data.error.innererror) {\n      if (err.error.data.error.innererror.innererror) {\n        this.lastQueryError = err.error.data.error.innererror.innererror.message;\n      } else {\n        this.lastQueryError = err.error.data.error.innererror['@message'];\n      }\n    } else if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError = err.data.message;\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  getDatabases() {\n    return this.datasource.getDatabases().then(dbs => {\n      this.databases = dbs;\n      if (dbs.length > 0) {\n        this.target.database = dbs[0].value;\n      }\n    });\n  }\n\n  getSchema() {\n    return this.getDatabases().then(() => {\n      return this.datasource.getSchema(this.target.database);\n    });\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","///<reference path=\"../../node_modules/monaco-editor/monaco.d.ts\" />\n\nimport angular from 'angular';\nimport KustoCodeEditor from './kusto_code_editor';\nimport config from 'grafana/app/core/config';\n\nlet editorTemplate = `<div id=\"content\" tabindex=\"0\" style=\"width: 100%; height: 150px\"></div>`;\n\nfunction link(scope, elem, attrs) {\n  const containerDiv = elem.find('#content')[0];\n  if (!(<any>window).monaco) {\n    (<any>window).System.import(`/${scope.pluginBaseUrl}/lib/monaco.min.js`).then(() => {\n      setTimeout(() => {\n        initMonaco(containerDiv, scope);\n      }, 1);\n    });\n  } else {\n    setTimeout(() => {\n      initMonaco(containerDiv, scope);\n    }, 1);\n  }\n\n  containerDiv.onblur = () => {\n    scope.onChange();\n  };\n\n  containerDiv.onkeydown = (evt) => {\n    if (evt.key === 'Escape') {\n      evt.stopPropagation();\n      return true;\n    }\n\n    return undefined;\n  };\n\n  function initMonaco(containerDiv, scope) {\n    const kustoCodeEditor = new KustoCodeEditor(\n      containerDiv,\n      scope.defaultTimeField,\n      scope.getSchema,\n      config\n    );\n\n    kustoCodeEditor.initMonaco(scope);\n\n    /* tslint:disable:no-bitwise */\n    kustoCodeEditor.addCommand(\n      monaco.KeyMod.Shift | monaco.KeyCode.Enter,\n      () => {\n        const newValue = kustoCodeEditor.getValue();\n        scope.content = newValue;\n        scope.onChange();\n      },\n    );\n    /* tslint:enable:no-bitwise */\n\n    // Sync with outer scope - update editor content if model has been changed from outside of directive.\n    scope.$watch('content', (newValue, oldValue) => {\n      let editorValue = kustoCodeEditor.getValue();\n      if (newValue !== editorValue && newValue !== oldValue) {\n        scope.$$postDigest(function() {\n          kustoCodeEditor.setEditorContent(newValue);\n        });\n      }\n    });\n\n    kustoCodeEditor.setOnDidChangeModelContent(() => {\n      scope.$apply(() => {\n        let newValue = kustoCodeEditor.getValue();\n        scope.content = newValue;\n      });\n    });\n\n    scope.$on('$destroy', () => {\n      kustoCodeEditor.disposeMonaco();\n    });\n  }\n}\n\n/** @ngInject */\nexport function kustoMonacoEditorDirective() {\n  return {\n    restrict: 'E',\n    template: editorTemplate,\n    scope: {\n      content: '=',\n      onChange: '&',\n      getSchema: '&',\n      defaultTimeField: '@',\n      pluginBaseUrl: '@',\n    },\n    link: link,\n  };\n}\n\nangular.module('grafana.controllers').directive('kustoMonacoEditor', kustoMonacoEditorDirective);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","import _ from 'lodash';\n\nexport interface SuggestionController {\n  _model: any;\n}\n\nexport default class KustoCodeEditor {\n  codeEditor: monaco.editor.IStandaloneCodeEditor;\n  completionItemProvider: monaco.IDisposable;\n  signatureHelpProvider: monaco.IDisposable;\n\n  splitWithNewLineRegex = /[^\\n]+\\n?|\\n/g;\n  newLineRegex = /\\r?\\n/;\n  startsWithKustoPipeRegex = /^\\|\\s*/g;\n  kustoPipeRegexStrict = /^\\|\\s*$/g;\n\n  constructor(private containerDiv: any, private defaultTimeField: string, private getSchema: () => any, private config: any) {}\n\n  initMonaco(scope) {\n    const themeName = this.config.bootData.user.lightTheme ? 'grafana-light' : 'vs-dark';\n\n    monaco.editor.defineTheme('grafana-light', {\n      base: 'vs',\n      inherit: true,\n      rules: [\n        { token: 'comment', foreground: '008000' },\n        { token: 'variable.predefined', foreground: '800080' },\n        { token: 'function', foreground: '0000FF' },\n        { token: 'operator.sql', foreground: 'FF4500' },\n        { token: 'string', foreground: 'B22222' },\n        { token: 'operator.scss', foreground: '0000FF' },\n        { token: 'variable', foreground: 'C71585' },\n        { token: 'variable.parameter', foreground: '9932CC' },\n        { token: '', foreground: '000000' },\n        { token: 'type', foreground: '0000FF' },\n        { token: 'tag', foreground: '0000FF' },\n        { token: 'annotation', foreground: '2B91AF' },\n        { token: 'keyword', foreground: '0000FF' },\n        { token: 'number', foreground: '191970' },\n        { token: 'annotation', foreground: '9400D3' },\n        { token: 'invalid', background: 'cd3131' },\n      ],\n      colors: {\n        'textCodeBlock.background': '#FFFFFF',\n      },\n    });\n\n    monaco.languages['kusto'].kustoDefaults.setLanguageSettings({\n      includeControlCommands: true,\n      newlineAfterPipe: true,\n      useIntellisenseV2: false,\n    });\n\n    this.codeEditor = monaco.editor.create(this.containerDiv, {\n      value: scope.content || 'Write your query here',\n      language: 'kusto',\n      selectionHighlight: false,\n      theme: themeName,\n      folding: true,\n      lineNumbers: 'off',\n      lineHeight: 16,\n      suggestFontSize: 13,\n      dragAndDrop: false,\n      occurrencesHighlight: false,\n      minimap: {\n        enabled: false,\n      },\n      renderIndentGuides: false,\n      wordWrap: 'on',\n    });\n    this.codeEditor.layout();\n\n    if (monaco.editor.getModels().length === 1) {\n      this.completionItemProvider = monaco.languages.registerCompletionItemProvider('kusto', {\n        triggerCharacters: ['.', ' '],\n        provideCompletionItems: this.getCompletionItems.bind(this),\n      });\n\n      this.signatureHelpProvider = monaco.languages.registerSignatureHelpProvider('kusto', {\n        signatureHelpTriggerCharacters: ['(', ')'],\n        provideSignatureHelp: this.getSignatureHelp.bind(this),\n      });\n    }\n\n    this.codeEditor.createContextKey('readyToExecute', true);\n\n    this.codeEditor.onDidChangeCursorSelection(event => {\n      this.onDidChangeCursorSelection(event);\n    });\n\n    this.getSchema().then(schema => {\n      if (!schema) {\n        return;\n      }\n\n      monaco.languages['kusto'].getKustoWorker().then(workerAccessor => {\n        const model = this.codeEditor.getModel();\n        workerAccessor(model.uri).then(worker => {\n          const dbName = Object.keys(schema.Databases).length > 0 ? Object.keys(schema.Databases)[0] : '';\n          worker.setSchemaFromShowSchema(schema, 'https://help.kusto.windows.net', dbName);\n          this.codeEditor.layout();\n        });\n      });\n    });\n  }\n\n  setOnDidChangeModelContent(listener) {\n    this.codeEditor.onDidChangeModelContent(listener);\n  }\n\n  disposeMonaco() {\n    if (this.completionItemProvider) {\n      try {\n        this.completionItemProvider.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the completion item provider.', e);\n      }\n    }\n    if (this.signatureHelpProvider) {\n      try {\n        this.signatureHelpProvider.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the signature help provider.', e);\n      }\n    }\n    if (this.codeEditor) {\n      try {\n        this.codeEditor.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the editor component.', e);\n      }\n    }\n  }\n\n  addCommand(keybinding: number, commandFunc: monaco.editor.ICommandHandler) {\n    this.codeEditor.addCommand(keybinding, commandFunc, 'readyToExecute');\n  }\n\n  getValue() {\n    return this.codeEditor.getValue();\n  }\n\n  toSuggestionController(srv: monaco.editor.IEditorContribution): SuggestionController {\n    return <any>srv;\n  }\n\n  setEditorContent(value) {\n    this.codeEditor.setValue(value);\n  }\n\n  getCompletionItems(model: monaco.editor.IReadOnlyModel, position: monaco.Position) {\n    const timeFilterDocs =\n      '##### Macro that uses the selected timerange in Grafana to filter the query.\\n\\n' +\n      '- `$__timeFilter()` -> Uses the ' + this.defaultTimeField + ' column\\n\\n' +\n      '- `$__timeFilter(datetimeColumn)` ->  Uses the specified datetime column to build the query.';\n\n    var textUntilPosition = model.getValueInRange({\n      startLineNumber: 1,\n      startColumn: 1,\n      endLineNumber: position.lineNumber,\n      endColumn: position.column,\n    });\n\n    if (!_.includes(textUntilPosition, '|')) {\n      return [];\n    }\n\n    if (!_.includes(textUntilPosition.toLowerCase(), 'where')) {\n      return [\n        {\n          label: 'where $__timeFilter(timeColumn)',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: 'where \\\\$__timeFilter(${0:' + this.defaultTimeField + '})',\n          },\n          documentation: {\n            value: timeFilterDocs,\n          },\n        },\n      ];\n    }\n\n    if (_.includes(model.getLineContent(position.lineNumber).toLowerCase(), 'where')) {\n      return [\n        {\n          label: '$__timeFilter(timeColumn)',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: '\\\\$__timeFilter(${0:' + this.defaultTimeField + '})',\n          },\n          documentation: {\n            value: timeFilterDocs,\n          },\n        },\n        {\n          label: '$__from',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__from`,\n          },\n          documentation: {\n            value:\n              'Built-in variable that returns the from value of the selected timerange in Grafana.\\n\\n' +\n              'Example: `where ' + this.defaultTimeField + ' > $__from` ',\n          },\n        },\n        {\n          label: '$__to',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__to`,\n          },\n          documentation: {\n            value:\n              'Built-in variable that returns the to value of the selected timerange in Grafana.\\n\\n' +\n              'Example: `where ' + this.defaultTimeField + ' < $__to` ',\n          },\n        },\n        {\n          label: '$__interval',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__interval`,\n          },\n          documentation: {\n            value:\n              '##### Built-in variable that returns an automatic time grain suitable for the current timerange.\\n\\n' +\n              'Used with the bin() function - `bin(' + this.defaultTimeField + ', $__interval)` \\n\\n' +\n              '[Grafana docs](http://docs.grafana.org/reference/templating/#the-interval-variable)',\n          },\n        },\n      ];\n    }\n\n    return [];\n  }\n\n  getSignatureHelp(model: monaco.editor.IReadOnlyModel, position: monaco.Position, token: monaco.CancellationToken) {\n    var textUntilPosition = model.getValueInRange({\n      startLineNumber: position.lineNumber,\n      startColumn: position.column - 14,\n      endLineNumber: position.lineNumber,\n      endColumn: position.column,\n    });\n\n    if (textUntilPosition !== '$__timeFilter(') {\n      return <monaco.languages.SignatureHelp>{};\n    }\n\n    const signature: monaco.languages.SignatureHelp = {\n      activeParameter: 0,\n      activeSignature: 0,\n      signatures: [\n        {\n          label: '$__timeFilter(timeColumn)',\n          parameters: [\n            {\n              label: 'timeColumn',\n              documentation:\n                'Default is ' + this.defaultTimeField + ' column. Datetime column to filter data using the selected date range. ',\n            },\n          ],\n        },\n      ],\n    };\n\n    return signature;\n  }\n\n  onDidChangeCursorSelection(event) {\n    if (event.source !== 'modelChange' || event.reason !== monaco.editor.CursorChangeReason.RecoverFromMarkers) {\n      return;\n    }\n    const lastChar = this.getCharAt(event.selection.positionLineNumber, event.selection.positionColumn - 1);\n\n    if (lastChar !== ' ') {\n      return;\n    }\n\n    this.triggerSuggestions();\n  }\n\n  triggerSuggestions() {\n    const suggestController = this.codeEditor.getContribution('editor.contrib.suggestController');\n    if (!suggestController) {\n      return;\n    }\n\n    const convertedController = this.toSuggestionController(suggestController);\n\n    convertedController._model.cancel();\n    setTimeout(function() {\n      convertedController._model.trigger(true);\n    }, 10);\n  }\n\n  getCharAt(lineNumber: number, column: number) {\n    const model = this.codeEditor.getModel();\n    if (model.getLineCount() === 0 || model.getLineCount() < lineNumber) {\n      return '';\n    }\n    const line = model.getLineContent(lineNumber);\n    if (line.length < column || column < 1) {\n      return '';\n    }\n    return line[column - 1];\n  }\n}\n","export class KustoDBAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n  datasource: any;\n  annotation: any;\n  databases: any[];\n  showHelp = false;\n\n  defaultQuery = '<your table>\\n| where $__timeFilter() \\n| project TimeGenerated, Text=YourTitleColumn, Tags=\"tag1,tag2\"';\n\n  /** @ngInject **/\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || this.defaultQuery;\n    this.databases = this.getDatabases();\n  }\n\n  getDatabases() {\n    if (this.databases && this.databases.length > 0) {\n      return this.databases;\n    }\n\n    return this.datasource.getDatabases().then(list => {\n      this.databases = list;\n      if (list.length > 0 && !this.annotation.database) {\n        this.annotation.database = list[0].value;\n      }\n      return this.databases;\n    }).catch(() => {});\n  }\n}\n","import { KustoDBDatasource } from './datasource';\nimport config from 'grafana/app/core/config';\nimport { isVersionGtOrEq } from './version';\n\nexport class KustoDBConfigCtrl {\n  static templateUrl = 'partials/config.html';\n\n  current: any;\n  suggestUrl: string;\n  kustoDbDatasource: any;\n  databases: any[];\n  hasRequiredGrafanaVersion: boolean;\n\n  /** @ngInject */\n  constructor($scope, backendSrv, $q) {\n    this.hasRequiredGrafanaVersion = this.hasMinVersion();\n    this.suggestUrl = 'https://yourcluster.kusto.windows.net';\n    $scope.getSuggestUrls = () => {\n      return [this.suggestUrl];\n    };\n\n    if (this.current.id) {\n      this.current.url = '/api/datasources/proxy/' + this.current.id;\n      this.kustoDbDatasource = new KustoDBDatasource(this.current, backendSrv, $q, null);\n      this.getDatabases();\n    }\n  }\n\n  getDatabases() {\n    return this.kustoDbDatasource.getDatabases().then(dbs => {\n      this.databases = dbs;\n      if (this.databases.length > 0) {\n        this.current.jsonData.defaultDatabase = this.current.jsonData.defaultDatabase || this.databases[0].value;\n      }\n    });\n  }\n\n  hasMinVersion(): boolean {\n    return (\n      isVersionGtOrEq(config.buildInfo.latestVersion, '5.3') ||\n      config.buildInfo.version === '5.3.0-beta1' ||\n      config.buildInfo.version === '5.3.0-pre1'\n    );\n  }\n\n  showMinVersionWarning() {\n    return !this.hasRequiredGrafanaVersion;\n  }\n}\n","import _ from 'lodash';\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n    return !(this.major < compared.major || this.minor < compared.minor || this.patch < compared.patch);\n  }\n\n  isValid(): boolean {\n    return _.isNumber(this.major);\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n"],"sourceRoot":""}